generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int       @id @default(autoincrement())
  address String    @unique
  payouts Payouts[]
  tasks   Task[]
}

model Labeller {
  id             Int          @id @default(autoincrement())
  address        String       @unique
  pending_amount Int
  locked_amount  Int
  submissions    Submission[]
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String?      @default("Select the most clickable thumbnail")
  user_id     Int
  signature   String
  amount      Int
  done        Boolean      @default(false)
  options     Option[]
  submissions Submission[]
  user        User         @relation(fields: [user_id], references: [id])
}

model Option {
  id          Int          @id @default(autoincrement())
  image_url   String
  task_id     Int
  task        Task         @relation(fields: [task_id], references: [id])
  submissions Submission[]
}

model Submission {
  id          Int      @id @default(autoincrement())
  Labeller_id Int
  option_id   Int
  task_id     Int
  amount      Int
  Labeller    Labeller @relation(fields: [Labeller_id], references: [id])
  option      Option   @relation(fields: [option_id], references: [id])
  task        Task     @relation(fields: [task_id], references: [id])

  @@unique([Labeller_id, task_id])
}

model Payouts {
  id        Int       @id @default(autoincrement())
  user_id   Int
  amount    Int
  signature String
  status    TxnStatus
  user      User      @relation(fields: [user_id], references: [id])
}

model playing_with_neon {
  id    Int    @id @default(autoincrement())
  name  String
  value Float? @db.Real
}

enum TxnStatus {
  Processing
  Success
  Failure
}
